/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("dual-range-bar", [], factory);
	else if(typeof exports === 'object')
		exports["dual-range-bar"] = factory();
	else
		root["dual-range-bar"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".drbar-container {\\n  /* Colors */\\n  --slider-color: #1E88A8;\\n  --range-color: #7DB9DE;\\n  --bg-color: #aaaaaa44;\\n  --slider-active: #08789b;\\n  --range-active: #5da8d6;\\n  /* Sizes */\\n  --slider-wh: 20px;\\n  --range-thick: 15px;\\n  --bg-thick: 10px;\\n  --mini-thick: 4px;\\n  --mini-ratio: calc(4/15);\\n}\\n.drbar-container.drbar-small {\\n  --slider-wh: 12px;\\n  --range-thick: 10px;\\n  --bg-thick: 6px;\\n  --mini-thick: 4px;\\n  --mini-ratio: calc(4/10);\\n}\\n.drbar-container.drbar-large {\\n  --slider-wh: 25px;\\n  --range-thick: 20px;\\n  --bg-thick: 12px;\\n  --mini-thick: 6px;\\n  --mini-ratio: calc(6/20);\\n}\\n.drbar-container.drbar-huge {\\n  --slider-wh: 32px;\\n  --range-thick: 24px;\\n  --bg-thick: 16px;\\n  --mini-thick: 8px;\\n  --mini-ratio: calc(8/24);\\n}\\n\\n.drbar-container,\\n.drbar-container .drbar-bg,\\n.drbar-container .drbar-slider,\\n.drbar-container .drbar-range {\\n  user-select: none;\\n  touch-action: none;\\n  -webkit-user-drag: none;\\n  -webkit-user-select: none;\\n  -webkit-touch-callout: none;\\n}\\n\\n/* Slider rules */\\n.drbar-container .drbar-slider {\\n  width: var(--slider-wh); height: var(--slider-wh);\\n  border-radius: 50%;\\n  z-index: 2;\\n  transition: background-color 400ms, transform 400ms, opacity 200ms;\\n}\\n.drbar-container .drbar-slider:not(:active) {\\n  background-color: var(--slider-color);\\n}\\n.drbar-container .drbar-slider:active {\\n  background-color: var(--slider-active);\\n  transform: scale(1.1);\\n  transition: transform 100ms;\\n}\\n.drbar-container.drbar-minimizes:not(:hover) .drbar-slider {\\n  transform: scale(0.25); opacity: 0;\\n}\\n\\n/* Range bar rules */\\n.drbar-container .drbar-range {\\n  cursor: move;\\n  z-index: 1;\\n  transition: background-color 400ms, transform 400ms, opacity 400ms;\\n}\\n.drbar-container.drbar-horizontal .drbar-range {\\n  height: var(--range-thick);\\n  border-radius: 2px/50%;\\n}\\n.drbar-container.drbar-vertical .drbar-range {\\n  width: var(--range-thick);\\n  border-radius: 50%/2px;\\n}\\n.drbar-container .drbar-range:not(:active) {\\n  background-color: var(--range-color);\\n}\\n.drbar-container .drbar-range:active {\\n  background-color: var(--range-active);\\n}\\n.drbar-container.drbar-horizontal.drbar-minimizes:not(:hover) .drbar-range {\\n  transform: scaleY(var(--mini-ratio)); opacity: 0.5;\\n}\\n.drbar-container.drbar-vertical.drbar-minimizes:not(:hover) .drbar-range {\\n  transform: scaleX(var(--mini-ratio)); opacity: 0.5;\\n}\\n\\n/* Background rules */\\n.drbar-container.drbar-horizontal .drbar-bg {\\n  height: var(--bg-thick);\\n  cursor: ew-resize;\\n}\\n.drbar-container.drbar-vertical .drbar-bg {\\n  width: var(--bg-thick);\\n  cursor: ns-resize;\\n}\\n.drbar-container .drbar-bg::before {\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  border-radius: calc(var(--bg-thick)/2);\\n  z-index: 0;\\n  background: var(--bg-color);\\n  transition: background-color 400ms, height 400ms, width 400ms, opacity 400ms;\\n}\\n.drbar-container.drbar-horizontal .drbar-bg::before {\\n  top: 50%;\\n  width: 100%; height: var(--bg-thick);\\n  transform: translateY(-50%);\\n}\\n.drbar-container.drbar-horizontal.drbar-minimizes:not(:hover) .drbar-bg::before {\\n  height: var(--mini-thick); opacity: 0;\\n}\\n\\n.drbar-container.drbar-vertical .drbar-bg::before {\\n  left: 50%;\\n  width: var(--bg-thick); height: 100%;\\n  transform: translateX(-50%);\\n}\\n.drbar-container.drbar-vertical.drbar-minimizes:not(:hover) .drbar-bg::before {\\n  width: var(--mini-thick); opacity: 0;\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://dual-range-bar/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {\r\n        return __webpack_require__.g;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);\n\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://dual-range-bar/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/DualHRangeBar.ts":
/*!******************************!*\
  !*** ./src/DualHRangeBar.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nvar DualRangeBar_1 = __webpack_require__(/*! ./DualRangeBar */ \"./src/DualRangeBar.ts\");\nvar DualHRangeBar = /** @class */ (function (_super) {\n    __extends(DualHRangeBar, _super);\n    function DualHRangeBar(container, config) {\n        var _this = _super.call(this, container, config) || this;\n        _this.container.classList.add(_this.prefix + \"-horizontal\");\n        // Inline styles\n        _this.doms.background.style.width = '100%';\n        _this.update();\n        return _this;\n    }\n    DualHRangeBar.prototype.update = function () {\n        _super.prototype.update.call(this);\n        var barW = this.doms.background.clientWidth;\n        var barH = this.doms.background.clientHeight;\n        var startSliderW = this.doms.startSlider.clientWidth;\n        var startSliderH = this.doms.startSlider.clientHeight;\n        var endSliderW = this.doms.endSlider.clientWidth;\n        var endSliderH = this.doms.endSlider.clientHeight;\n        var rangeSliderW = (this.relative.upper - this.relative.lower) * barW;\n        var rangeSliderH = this.doms.rangeSlider.clientHeight;\n        var startSliderL = this.relative.lower * barW - startSliderW / 2;\n        var startSliderT = barH / 2 - startSliderH / 2;\n        var endSliderL = this.relative.upper * barW - endSliderW / 2;\n        var endSliderT = barH / 2 - endSliderH / 2;\n        var rangeSliderL = this.relative.lower * barW;\n        var rangeSliderT = barH / 2 - rangeSliderH / 2;\n        this.doms.startSlider.style.left = startSliderL + \"px\";\n        this.doms.startSlider.style.top = startSliderT + \"px\";\n        this.doms.endSlider.style.left = endSliderL + \"px\";\n        this.doms.endSlider.style.top = endSliderT + \"px\";\n        this.doms.rangeSlider.style.left = rangeSliderL + \"px\";\n        this.doms.rangeSlider.style.top = rangeSliderT + \"px\";\n        this.doms.rangeSlider.style.width = rangeSliderW + \"px\";\n    };\n    /** Helper function for getting dx via clientX */\n    DualHRangeBar.prototype.getDx = function (clientX) {\n        var bgRect = this.doms.background.getBoundingClientRect();\n        return clientX - bgRect.left;\n    };\n    DualHRangeBar.prototype.draggingStart = function (event) {\n        var minLower = 0, maxLower = 1 - this.relative.minSpan;\n        var newLower = this.getDx(event.clientX) / this.doms.background.clientWidth;\n        if (newLower < minLower)\n            newLower = minLower;\n        if (newLower > maxLower)\n            newLower = maxLower;\n        this.relative.lower = newLower;\n        if (newLower + this.relative.minSpan > this.relative.upper)\n            this.relative.upper = newLower + this.relative.minSpan;\n        if (newLower + this.relative.maxSpan < this.relative.upper)\n            this.relative.upper = newLower + this.relative.maxSpan;\n    };\n    DualHRangeBar.prototype.draggingEnd = function (event) {\n        var minUpper = this.relative.minSpan, maxUpper = 1;\n        var newUpper = this.getDx(event.clientX) / this.doms.background.clientWidth;\n        if (newUpper < minUpper)\n            newUpper = minUpper;\n        if (newUpper > maxUpper)\n            newUpper = maxUpper;\n        this.relative.upper = newUpper;\n        if (newUpper - this.relative.minSpan < this.relative.lower)\n            this.relative.lower = newUpper - this.relative.minSpan;\n        if (newUpper - this.relative.maxSpan > this.relative.lower)\n            this.relative.lower = newUpper - this.relative.maxSpan;\n    };\n    DualHRangeBar.prototype.draggingRange = function (event) {\n        var maxDx = 1 - this.relative.upper, minDx = -this.relative.lower;\n        var dx = event.movementX / this.doms.background.clientWidth;\n        if (dx > maxDx)\n            dx = maxDx;\n        if (dx < minDx)\n            dx = minDx;\n        this.relative.lower += dx;\n        this.relative.upper += dx;\n    };\n    DualHRangeBar.prototype.wheelScaling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientWidth;\n        var cursorPos = this.getDx(event.clientX) / this.doms.background.clientWidth;\n        var relativeSpan = this.relative.upper - this.relative.lower;\n        var newLower = this.relative.lower -\n            dy * (cursorPos - this.relative.lower) / relativeSpan;\n        var newUpper = this.relative.upper +\n            dy * (this.relative.upper - cursorPos) / relativeSpan;\n        if (newLower < 0)\n            newLower = 0;\n        if (newUpper > 1)\n            newUpper = 1;\n        if (newUpper - newLower < this.relative.minSpan) {\n            newLower = cursorPos -\n                this.relative.minSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.minSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        if (newUpper - newLower > this.relative.maxSpan) {\n            newLower = cursorPos -\n                this.relative.maxSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.maxSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        this.relative.lower = newLower;\n        this.relative.upper = newUpper;\n    };\n    DualHRangeBar.prototype.wheelScrolling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientWidth;\n        var minDy = -this.relative.lower;\n        var maxDy = 1 - this.relative.upper;\n        if (dy < minDy)\n            dy = minDy;\n        if (dy > maxDy)\n            dy = maxDy;\n        this.relative.lower += dy;\n        this.relative.upper += dy;\n    };\n    return DualHRangeBar;\n}(DualRangeBar_1.default));\nexports.default = DualHRangeBar;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/DualHRangeBar.ts?");

/***/ }),

/***/ "./src/DualRangeBar.ts":
/*!*****************************!*\
  !*** ./src/DualRangeBar.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/** Common logic for a dual range bar object\n * @author Celestial Phineas */\n__webpack_require__(/*! ./style.css */ \"./src/style.css\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nvar resize_observer_polyfill_1 = __webpack_require__(/*! resize-observer-polyfill */ \"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\");\nvar DualRangeBar = /** @class */ (function () {\n    //#endregion\n    /** Dual range bar contructor\n     * @constructor\n     * @param {string | HTMLDivElement} container The container element of the dual range bar */\n    function DualRangeBar(container, config) {\n        var _this = this;\n        /** Constructed elements */\n        this.doms = {\n            /** Backgroud div */\n            background: document.createElement('div'),\n            /** Div of the starting slider */\n            startSlider: document.createElement('div'),\n            /** Div of the ending slider */\n            endSlider: document.createElement('div'),\n            /** Div of the range slider */\n            rangeSlider: document.createElement('div')\n        };\n        /** A unique prefix for everything in dual-range-bar */\n        this.prefix = 'drbar';\n        /** The slider that is under dragging */\n        this.underDragging = null;\n        /** Relative values are used for calculating layout,\n         * this should range from 0 to 1. */\n        this.relative = {\n            /** Corresponding value of the starting slider */\n            lower: 0,\n            /** Corresponding value of the ending slider */\n            upper: 1,\n            /** Minimum span of the range slider, in ratio to 1 */\n            minSpan: 0.2,\n            /** Maximum span of the range slider, in ratio to 1 */\n            maxSpan: 1,\n        };\n        //#region Absolute preperties\n        /** Minimum possible value of the ranges */\n        this.lowerBound = 0;\n        /** Maximum possible value of the ranges */\n        this.upperBound = 1;\n        //#region Initializing the container\n        if (typeof (container) === 'string')\n            this.container = document.getElementById(container);\n        else\n            this.container = container;\n        // Throw an error if failed\n        if (!this.container)\n            throw Error(container + \" is not a <div> element.\");\n        // Add an id to the container if the container does not have one\n        if (this.container.id === null)\n            this.container.id = this.getUniqueID();\n        (function (x) {\n            if (!_this.container.classList.contains(x)) {\n                _this.container.classList.add(x);\n            }\n        })(this.prefix + \"-container\");\n        //#endregion\n        //#region DOM element initializing\n        // Set class for the div elements\n        this.doms.background.classList.add(this.prefix + \"-bg\");\n        this.doms.startSlider.classList.add(this.prefix + \"-slider\", this.prefix + \"-start\");\n        this.doms.endSlider.classList.add(this.prefix + \"-slider\", this.prefix + \"-end\");\n        this.doms.rangeSlider.classList.add(this.prefix + \"-range\");\n        // Insert the DOMs\n        this.container.appendChild(this.doms.background);\n        this.doms.background.appendChild(this.doms.rangeSlider);\n        this.doms.background.appendChild(this.doms.startSlider);\n        this.doms.background.appendChild(this.doms.endSlider);\n        //#endregion\n        //#region Inline styles of the DOM elements\n        utils_1.setStyle(this.container, {\n            display: 'flex', overflow: 'visible',\n            alignItems: 'center', justifyContent: 'center'\n        });\n        var elementStyle = {\n            display: 'block', overflow: 'visible', position: 'absolute'\n        };\n        utils_1.setStyle(this.doms.background, elementStyle);\n        utils_1.setStyle(this.doms.startSlider, elementStyle);\n        utils_1.setStyle(this.doms.endSlider, elementStyle);\n        utils_1.setStyle(this.doms.rangeSlider, elementStyle);\n        //#endregion\n        //#region Handling configuration\n        if (config === null || config === void 0 ? void 0 : config.minimizes)\n            this.container.classList.add(this.prefix + \"-minimizes\");\n        // Size configuration\n        if (config === null || config === void 0 ? void 0 : config.size) {\n            this.container.classList.remove(this.prefix + \"-small\", this.prefix + \"-large\", this.prefix + \"-huge\");\n            if (config.size !== 'default')\n                this.container.classList.add(this.prefix + \"-\" + config.size);\n        }\n        // Declarative data attributes\n        if (this.container.dataset.lowerBound !== undefined)\n            this.lowerBound = parseFloat(this.container.dataset.lowerBound);\n        if (this.container.dataset.upperBound !== undefined)\n            this.upperBound = parseFloat(this.container.dataset.upperBound);\n        if (this.container.dataset.minSpan !== undefined)\n            this.minSpan = parseFloat(this.container.dataset.minSpan);\n        if (this.container.dataset.maxSpan !== undefined)\n            this.maxSpan = parseFloat(this.container.dataset.maxSpan);\n        if (this.container.dataset.lower !== undefined)\n            this.lower = parseFloat(this.container.dataset.lower);\n        if (this.container.dataset.upper !== undefined)\n            this.upper = parseFloat(this.container.dataset.upper);\n        // Values in the config\n        if ((config === null || config === void 0 ? void 0 : config.lowerBound) !== undefined)\n            this.lowerBound = config.lowerBound;\n        if ((config === null || config === void 0 ? void 0 : config.upperBound) !== undefined)\n            this.upperBound = config.upperBound;\n        if ((config === null || config === void 0 ? void 0 : config.minSpan) !== undefined)\n            this.minSpan = config.minSpan;\n        if ((config === null || config === void 0 ? void 0 : config.maxSpan) !== undefined)\n            this.maxSpan = config.maxSpan;\n        if ((config === null || config === void 0 ? void 0 : config.lower) !== undefined)\n            this.lower = config.lower;\n        if ((config === null || config === void 0 ? void 0 : config.upper) !== undefined)\n            this.upper = config.upper;\n        // Handling color config\n        var colorConfig = {};\n        if (config === null || config === void 0 ? void 0 : config.sliderColor)\n            colorConfig['--slider-color'] = config.sliderColor;\n        if (config === null || config === void 0 ? void 0 : config.sliderActiveColor)\n            colorConfig['--slider-active'] = config.sliderActiveColor;\n        if (config === null || config === void 0 ? void 0 : config.rangeColor)\n            colorConfig['--range-color'] = config.rangeColor;\n        if (config === null || config === void 0 ? void 0 : config.rangeActiveColor)\n            colorConfig['--range-active'] = config.rangeActiveColor;\n        if (config === null || config === void 0 ? void 0 : config.bgColor)\n            colorConfig['--bg-color'] = config.bgColor;\n        if (Object.keys(colorConfig).length > 0) {\n            var cssString = \"#\" + this.container.id + \"{\";\n            for (var key in colorConfig)\n                cssString += key + \":\" + colorConfig[key] + \";\";\n            cssString += '}';\n            var sheet = document.createElement('style');\n            sheet.innerText = cssString;\n            document.head.appendChild(sheet);\n        }\n        //#endregion\n        //#region Handling events\n        // Update bar when the container resizes\n        var resizeObserver = new resize_observer_polyfill_1.default(function () {\n            _this.update();\n        });\n        resizeObserver.observe(this.container);\n        // `underDragging` status update\n        this.doms.startSlider.addEventListener('mousedown', function () {\n            _this.underDragging = 'start';\n        });\n        this.doms.endSlider.addEventListener('mousedown', function () {\n            _this.underDragging = 'end';\n        });\n        this.doms.rangeSlider.addEventListener('mousedown', function () {\n            _this.underDragging = 'range';\n        });\n        window.addEventListener('mousemove', function (e) {\n            e.preventDefault();\n            switch (_this.underDragging) {\n                case null: return;\n                case 'start':\n                    _this.draggingStart(e);\n                    break;\n                case 'end':\n                    _this.draggingEnd(e);\n                    break;\n                case 'range':\n                    _this.draggingRange(e);\n                    break;\n            }\n            _this.update();\n            _this.emitEvent();\n        });\n        window.addEventListener('mouseup', function () {\n            if (_this.underDragging === null)\n                return;\n            _this.underDragging = null;\n            _this.update();\n            _this.emitEvent();\n        });\n        // Wheel behaviour\n        this.doms.rangeSlider.addEventListener('wheel', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            _this.wheelScaling(e);\n            _this.update();\n            _this.emitEvent();\n        });\n        this.doms.background.addEventListener('wheel', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            _this.wheelScrolling(e);\n            _this.update();\n            _this.emitEvent();\n        });\n        //#endregion\n    }\n    DualRangeBar.prototype.emitEvent = function () {\n        var event = new CustomEvent('update', {\n            detail: this\n        });\n        this.container.dispatchEvent(event);\n    };\n    /** An helper function for generating a unique ID */\n    DualRangeBar.prototype.getUniqueID = function () {\n        return this.prefix + \"-\" + Math.random().toString(36).substr(2, 9);\n    };\n    /** Update element locations */\n    DualRangeBar.prototype.update = function () {\n        // Update data attributes\n        this.container.dataset.lowerBound = this.lowerBound.toString();\n        this.container.dataset.upperBound = this.upperBound.toString();\n        this.container.dataset.minSpan = this.minSpan.toString();\n        this.container.dataset.maxSpan = this.maxSpan.toString();\n        this.container.dataset.lower = this.lower.toString();\n        this.container.dataset.upper = this.upper.toString();\n    };\n    Object.defineProperty(DualRangeBar.prototype, \"boundSpan\", {\n        /** Difference of the upper bound and the lower bound */\n        get: function () { return this.upperBound - this.lowerBound; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"lower\", {\n        /** Absolute lower range */\n        get: function () { return this.relative.lower * this.boundSpan + this.lowerBound; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            var relativeLower = (newVal - this.lowerBound) / this.boundSpan;\n            if (relativeLower < 0 || relativeLower > 1)\n                throw Error('\"lower\" value out of bound');\n            this.relative.lower = relativeLower;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"upper\", {\n        /** Absolute upper range */\n        get: function () { return this.relative.upper * this.boundSpan + this.lowerBound; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            var relativeUpper = (newVal - this.lowerBound) / this.boundSpan;\n            if (relativeUpper < 0 || relativeUpper > 1)\n                throw Error('\"upper\" value out of bound');\n            this.relative.upper = relativeUpper;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"minSpan\", {\n        /** Absolute minimum range span */\n        get: function () { return this.relative.minSpan * this.boundSpan; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            var relativeSpan = Math.abs(newVal / this.boundSpan);\n            if (relativeSpan > 1)\n                throw Error('Invalid \"minSpan\" specification');\n            this.relative.minSpan = relativeSpan;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"maxSpan\", {\n        /** Absolute maximum range span */\n        get: function () { return this.relative.maxSpan * this.boundSpan; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            var relativeSpan = Math.abs(newVal / this.boundSpan);\n            if (relativeSpan > 1)\n                throw Error('Invalid \"maxSpan\" specification');\n            this.relative.maxSpan = relativeSpan;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Implementing the EventTarget interface\n    DualRangeBar.prototype.addEventListener = function (type, listener, options) {\n        this.container.addEventListener(type, listener, options);\n    };\n    DualRangeBar.prototype.dispatchEvent = function (event) {\n        return this.container.dispatchEvent(event);\n    };\n    DualRangeBar.prototype.removeEventListener = function (type, callback, options) {\n        this.container.removeEventListener(type, callback, options);\n    };\n    return DualRangeBar;\n}());\nexports.default = DualRangeBar;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/DualRangeBar.ts?");

/***/ }),

/***/ "./src/DualVRangeBar.ts":
/*!******************************!*\
  !*** ./src/DualVRangeBar.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nvar DualRangeBar_1 = __webpack_require__(/*! ./DualRangeBar */ \"./src/DualRangeBar.ts\");\nvar DualVRangeBar = /** @class */ (function (_super) {\n    __extends(DualVRangeBar, _super);\n    function DualVRangeBar(container, config) {\n        var _this = _super.call(this, container, config) || this;\n        _this.container.classList.add(_this.prefix + \"-vertical\");\n        // Inline styles\n        _this.doms.background.style.height = '100%';\n        _this.update();\n        return _this;\n    }\n    DualVRangeBar.prototype.update = function () {\n        _super.prototype.update.call(this);\n        var barW = this.doms.background.clientWidth;\n        var barH = this.doms.background.clientHeight;\n        var startSliderW = this.doms.startSlider.clientWidth;\n        var startSliderH = this.doms.startSlider.clientHeight;\n        var endSliderW = this.doms.endSlider.clientWidth;\n        var endSliderH = this.doms.endSlider.clientHeight;\n        var rangeSliderW = this.doms.rangeSlider.clientWidth;\n        var rangeSliderH = (this.relative.upper - this.relative.lower) * barH;\n        var startSliderL = barW / 2 - startSliderW / 2;\n        var startSliderT = this.relative.lower * barH - startSliderH / 2;\n        var endSliderL = barW / 2 - endSliderW / 2;\n        var endSliderT = this.relative.upper * barH - endSliderH / 2;\n        var rangeSliderL = barW / 2 - rangeSliderW / 2;\n        var rangeSliderT = this.relative.lower * barH;\n        this.doms.startSlider.style.left = startSliderL + \"px\";\n        this.doms.startSlider.style.top = startSliderT + \"px\";\n        this.doms.endSlider.style.left = endSliderL + \"px\";\n        this.doms.endSlider.style.top = endSliderT + \"px\";\n        this.doms.rangeSlider.style.left = rangeSliderL + \"px\";\n        this.doms.rangeSlider.style.top = rangeSliderT + \"px\";\n        this.doms.rangeSlider.style.height = rangeSliderH + \"px\";\n    };\n    /** Helper function for getting dx via clientX */\n    DualVRangeBar.prototype.getDy = function (clientY) {\n        var bgRect = this.doms.background.getBoundingClientRect();\n        return clientY - bgRect.top;\n    };\n    DualVRangeBar.prototype.draggingStart = function (event) {\n        var minLower = 0, maxLower = 1 - this.relative.minSpan;\n        var newLower = this.getDy(event.clientY) / this.doms.background.clientHeight;\n        if (newLower < minLower)\n            newLower = minLower;\n        if (newLower > maxLower)\n            newLower = maxLower;\n        this.relative.lower = newLower;\n        if (newLower + this.relative.minSpan > this.relative.upper)\n            this.relative.upper = newLower + this.relative.minSpan;\n        if (newLower + this.relative.maxSpan < this.relative.upper)\n            this.relative.upper = newLower + this.relative.maxSpan;\n    };\n    DualVRangeBar.prototype.draggingEnd = function (event) {\n        var minUpper = this.relative.minSpan, maxUpper = 1;\n        var newUpper = this.getDy(event.clientY) / this.doms.background.clientHeight;\n        if (newUpper < minUpper)\n            newUpper = minUpper;\n        if (newUpper > maxUpper)\n            newUpper = maxUpper;\n        this.relative.upper = newUpper;\n        if (newUpper - this.relative.minSpan < this.relative.lower)\n            this.relative.lower = newUpper - this.relative.minSpan;\n        if (newUpper - this.relative.maxSpan > this.relative.lower)\n            this.relative.lower = newUpper - this.relative.maxSpan;\n    };\n    DualVRangeBar.prototype.draggingRange = function (event) {\n        var maxDx = 1 - this.relative.upper, minDx = -this.relative.lower;\n        var dx = event.movementY / this.doms.background.clientHeight;\n        if (dx > maxDx)\n            dx = maxDx;\n        if (dx < minDx)\n            dx = minDx;\n        this.relative.lower += dx;\n        this.relative.upper += dx;\n    };\n    DualVRangeBar.prototype.wheelScaling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientHeight;\n        var cursorPos = this.getDy(event.clientY) / this.doms.background.clientHeight;\n        var relativeSpan = this.relative.upper - this.relative.lower;\n        var newLower = this.relative.lower -\n            dy * (cursorPos - this.relative.lower) / relativeSpan;\n        var newUpper = this.relative.upper +\n            dy * (this.relative.upper - cursorPos) / relativeSpan;\n        if (newLower < 0)\n            newLower = 0;\n        if (newUpper > 1)\n            newUpper = 1;\n        if (newUpper - newLower < this.relative.minSpan) {\n            newLower = cursorPos -\n                this.relative.minSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.minSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        if (newUpper - newLower > this.relative.maxSpan) {\n            newLower = cursorPos -\n                this.relative.maxSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.maxSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        this.relative.lower = newLower;\n        this.relative.upper = newUpper;\n    };\n    DualVRangeBar.prototype.wheelScrolling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientHeight;\n        var minDy = -this.relative.lower;\n        var maxDy = 1 - this.relative.upper;\n        if (dy < minDy)\n            dy = minDy;\n        if (dy > maxDy)\n            dy = maxDy;\n        this.relative.lower += dy;\n        this.relative.upper += dy;\n    };\n    return DualVRangeBar;\n}(DualRangeBar_1.default));\nexports.default = DualVRangeBar;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/DualVRangeBar.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DualVRangeBar = exports.DualHRangeBar = void 0;\nvar DualHRangeBar_1 = __webpack_require__(/*! ./DualHRangeBar */ \"./src/DualHRangeBar.ts\");\nexports.DualHRangeBar = DualHRangeBar_1.default;\nvar DualVRangeBar_1 = __webpack_require__(/*! ./DualVRangeBar */ \"./src/DualVRangeBar.ts\");\nexports.DualVRangeBar = DualVRangeBar_1.default;\nwindow.addEventListener('load', function () {\n    var dualRangeBars = document.getElementsByClassName('drbar-container');\n    for (var i = 0; i < dualRangeBars.length; i++) {\n        var bar = dualRangeBars.item(i);\n        if ((bar === null || bar === void 0 ? void 0 : bar.nodeName) !== 'DIV')\n            continue;\n        if ((bar === null || bar === void 0 ? void 0 : bar.childElementCount) > 0)\n            continue;\n        if (bar === null || bar === void 0 ? void 0 : bar.classList.contains('drbar-vertical')) {\n            new DualVRangeBar_1.default(bar);\n        }\n        else {\n            new DualHRangeBar_1.default(bar);\n        }\n    }\n});\nwindow.DualHRange = DualHRangeBar_1.default;\nwindow.DualVRange = DualVRangeBar_1.default;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/index.ts?");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getDeltaY = exports.setStyle = void 0;\n/** Fask set styles for a HTML element, tricky AnyScript */\nfunction setStyle(htmlElement, styleSpec) {\n    Object.assign(htmlElement.style, styleSpec);\n}\nexports.setStyle = setStyle;\n/** Return a calculated value of deltaY from a WheelEvent,\n * since Firefox would return `deltaMode === 0x02` or `deltaMode === 0x03` */\nfunction getDeltaY(event) {\n    var r = event.deltaMode === 0x01 ? 16 : 1;\n    return event.deltaY * r;\n}\nexports.getDeltaY = getDeltaY;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/index.ts");
/******/ })()
;
});