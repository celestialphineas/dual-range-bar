(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["dual-range-bar"] = factory();
	else
		root["dual-range-bar"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./src/style.css":
/*!*************************************************!*\
  !*** ./node_modules/css-loader!./src/style.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".drbar-container {\\n  /* Colors */\\n  --slider-color: #1E88A8;\\n  --range-color: #7DB9DE;\\n  --bg-color: #aaaaaa44;\\n  --slider-active: #08789b;\\n  --range-active: #5da8d6;\\n  /* Sizes */\\n  --slider-wh: 20px;\\n  --range-thick: 15px;\\n  --bg-thick: 10px;\\n  --mini-thick: 4px;\\n  --mini-ratio: calc(4/15);\\n}\\n.drbar-container.drbar-small {\\n  --slider-wh: 12px;\\n  --range-thick: 10px;\\n  --bg-thick: 6px;\\n  --mini-thick: 4px;\\n  --mini-ratio: calc(4/10);\\n}\\n.drbar-container.drbar-large {\\n  --slider-wh: 25px;\\n  --range-thick: 20px;\\n  --bg-thick: 12px;\\n  --mini-thick: 6px;\\n  --mini-ratio: calc(6/20);\\n}\\n.drbar-container.drbar-huge {\\n  --slider-wh: 32px;\\n  --range-thick: 24px;\\n  --bg-thick: 16px;\\n  --mini-thick: 8px;\\n  --mini-ratio: calc(8/24);\\n}\\n\\n.drbar-container,\\n.drbar-container .drbar-bg,\\n.drbar-container .drbar-slider,\\n.drbar-container .drbar-range {\\n  user-select: none;\\n  touch-action: none;\\n  -webkit-user-drag: none;\\n  -webkit-user-select: none;\\n  -webkit-touch-callout: none;\\n}\\n\\n/* Slider rules */\\n.drbar-container .drbar-slider {\\n  width: var(--slider-wh); height: var(--slider-wh);\\n  border-radius: 50%;\\n  z-index: 2;\\n  transition: background-color 400ms, transform 400ms, opacity 200ms;\\n}\\n.drbar-container .drbar-slider:not(:active) {\\n  background-color: var(--slider-color);\\n}\\n.drbar-container .drbar-slider:active {\\n  background-color: var(--slider-active);\\n  transform: scale(1.1);\\n  transition: transform 100ms;\\n}\\n.drbar-container.drbar-minimizes:not(:hover) .drbar-slider {\\n  transform: scale(0.25);\\n  opacity: 0;\\n}\\n\\n/* Range bar rules */\\n.drbar-container .drbar-range {\\n  cursor: move;\\n  z-index: 1;\\n  transition: background-color 400ms, transform 400ms, opacity 400ms;\\n}\\n.drbar-container.drbar-horizontal .drbar-range {\\n  height: var(--range-thick);\\n  border-radius: 2px/50%;\\n}\\n.drbar-container.drbar-vertical .drbar-range {\\n  width: var(--range-thick);\\n  border-radius: 50%/2px;\\n}\\n.drbar-container .drbar-range:not(:active) {\\n  background-color: var(--range-color);\\n}\\n.drbar-container .drbar-range:active {\\n  background-color: var(--range-active);\\n}\\n.drbar-container.drbar-horizontal.drbar-minimizes:not(:hover) .drbar-range {\\n  transform: scaleY(var(--mini-ratio));\\n  opacity: 0.5;\\n}\\n.drbar-container.drbar-vertical.drbar-minimizes:not(:hover) .drbar-range {\\n  transform: scaleX(var(--mini-ratio));\\n  opacity: 0.5;\\n}\\n\\n/* Background rules */\\n.drbar-container.drbar-horizontal .drbar-bg {\\n  height: var(--bg-thick);\\n  cursor: ew-resize;\\n}\\n.drbar-container.drbar-vertical .drbar-bg {\\n  width: var(--bg-thick);\\n  cursor: ns-resize;\\n}\\n.drbar-container .drbar-bg::before {\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  border-radius: calc(var(--bg-thick)/2);\\n  z-index: 0;\\n  background: var(--bg-color);\\n  transition: background-color 400ms, height 400ms, width 400ms, opacity 400ms;\\n}\\n.drbar-container.drbar-horizontal .drbar-bg::before {\\n  top: 50%;\\n  width: 100%; height: var(--bg-thick);\\n  transform: translateY(-50%);\\n}\\n.drbar-container.drbar-horizontal.drbar-minimizes:not(:hover) .drbar-bg::before {\\n  height: var(--mini-thick); opacity: 0;\\n}\\n\\n.drbar-container.drbar-vertical .drbar-bg::before {\\n  left: 50%;\\n  width: var(--bg-thick); height: 100%;\\n  transform: translateX(-50%);\\n}\\n.drbar-container.drbar-vertical.drbar-minimizes:not(:hover) .drbar-bg::before {\\n  width: var(--mini-thick); opacity: 0;\\n}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://dual-range-bar/./src/style.css?./node_modules/css-loader");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack://dual-range-bar/./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://dual-range-bar/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/DualHRangeBar.ts":
/*!******************************!*\
  !*** ./src/DualHRangeBar.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nvar DualRangeBar_1 = __webpack_require__(/*! ./DualRangeBar */ \"./src/DualRangeBar.ts\");\nvar DualHRangeBar = /** @class */ (function (_super) {\n    __extends(DualHRangeBar, _super);\n    function DualHRangeBar(container, config) {\n        var _this = _super.call(this, container, config) || this;\n        _this.container.classList.add(_this.prefix + \"-horizontal\");\n        // Inline styles\n        _this.doms.background.style.width = '100%';\n        _this.update();\n        return _this;\n    }\n    DualHRangeBar.prototype.update = function () {\n        var barW = this.doms.background.clientWidth;\n        var barH = this.doms.background.clientHeight;\n        var startSliderW = this.doms.startSlider.clientWidth;\n        var startSliderH = this.doms.startSlider.clientHeight;\n        var endSliderW = this.doms.endSlider.clientWidth;\n        var endSliderH = this.doms.endSlider.clientHeight;\n        var rangeSliderW = (this.relative.upper - this.relative.lower) * barW;\n        var rangeSliderH = this.doms.rangeSlider.clientHeight;\n        var startSliderL = this.relative.lower * barW - startSliderW / 2;\n        var startSliderT = barH / 2 - startSliderH / 2;\n        var endSliderL = this.relative.upper * barW - endSliderW / 2;\n        var endSliderT = barH / 2 - endSliderH / 2;\n        var rangeSliderL = this.relative.lower * barW;\n        var rangeSliderT = barH / 2 - rangeSliderH / 2;\n        this.doms.startSlider.style.left = startSliderL + \"px\";\n        this.doms.startSlider.style.top = startSliderT + \"px\";\n        this.doms.endSlider.style.left = endSliderL + \"px\";\n        this.doms.endSlider.style.top = endSliderT + \"px\";\n        this.doms.rangeSlider.style.left = rangeSliderL + \"px\";\n        this.doms.rangeSlider.style.top = rangeSliderT + \"px\";\n        this.doms.rangeSlider.style.width = rangeSliderW + \"px\";\n    };\n    /** Helper function for getting dx via clientX */\n    DualHRangeBar.prototype.getDx = function (clientX) {\n        var bgRect = this.doms.background.getBoundingClientRect();\n        return clientX - bgRect.left;\n    };\n    DualHRangeBar.prototype.draggingStart = function (event) {\n        var minLower = 0, maxLower = 1 - this.relative.minSpan;\n        var newLower = this.getDx(event.clientX) / this.doms.background.clientWidth;\n        if (newLower < minLower)\n            newLower = minLower;\n        if (newLower > maxLower)\n            newLower = maxLower;\n        this.relative.lower = newLower;\n        if (newLower + this.relative.minSpan > this.relative.upper)\n            this.relative.upper = newLower + this.relative.minSpan;\n        if (newLower + this.relative.maxSpan < this.relative.upper)\n            this.relative.upper = newLower + this.relative.maxSpan;\n    };\n    DualHRangeBar.prototype.draggingEnd = function (event) {\n        var minUpper = this.relative.minSpan, maxUpper = 1;\n        var newUpper = this.getDx(event.clientX) / this.doms.background.clientWidth;\n        if (newUpper < minUpper)\n            newUpper = minUpper;\n        if (newUpper > maxUpper)\n            newUpper = maxUpper;\n        this.relative.upper = newUpper;\n        if (newUpper - this.relative.minSpan < this.relative.lower)\n            this.relative.lower = newUpper - this.relative.minSpan;\n        if (newUpper - this.relative.maxSpan > this.relative.lower)\n            this.relative.lower = newUpper - this.relative.maxSpan;\n    };\n    DualHRangeBar.prototype.draggingRange = function (event) {\n        var maxDx = 1 - this.relative.upper, minDx = -this.relative.lower;\n        var dx = event.movementX / this.doms.background.clientWidth;\n        if (dx > maxDx)\n            dx = maxDx;\n        if (dx < minDx)\n            dx = minDx;\n        this.relative.lower += dx;\n        this.relative.upper += dx;\n    };\n    DualHRangeBar.prototype.wheelScaling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientWidth;\n        var cursorPos = this.getDx(event.clientX) / this.doms.background.clientWidth;\n        var relativeSpan = this.relative.upper - this.relative.lower;\n        var newLower = this.relative.lower -\n            dy * (cursorPos - this.relative.lower) / relativeSpan;\n        var newUpper = this.relative.upper +\n            dy * (this.relative.upper - cursorPos) / relativeSpan;\n        if (newLower < 0)\n            newLower = 0;\n        if (newUpper > 1)\n            newUpper = 1;\n        if (newUpper - newLower < this.relative.minSpan) {\n            newLower = cursorPos -\n                this.relative.minSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.minSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        if (newUpper - newLower > this.relative.maxSpan) {\n            newLower = cursorPos -\n                this.relative.maxSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.maxSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        this.relative.lower = newLower;\n        this.relative.upper = newUpper;\n    };\n    DualHRangeBar.prototype.wheelScrolling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientWidth;\n        var minDy = -this.relative.lower;\n        var maxDy = 1 - this.relative.upper;\n        if (dy < minDy)\n            dy = minDy;\n        if (dy > maxDy)\n            dy = maxDy;\n        this.relative.lower += dy;\n        this.relative.upper += dy;\n    };\n    return DualHRangeBar;\n}(DualRangeBar_1.default));\nexports.default = DualHRangeBar;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/DualHRangeBar.ts?");

/***/ }),

/***/ "./src/DualRangeBar.ts":
/*!*****************************!*\
  !*** ./src/DualRangeBar.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Common logic for a dual range bar object\n * @author Celestial Phineas */\n__webpack_require__(/*! ./style.css */ \"./src/style.css\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nvar resize_observer_polyfill_1 = __webpack_require__(/*! resize-observer-polyfill */ \"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\");\nvar DualRangeBar = /** @class */ (function () {\n    //#endregion\n    /** Dual range bar contructor\n     * @constructor\n     * @param {string | HTMLDivElement} container The container element of the dual range bar */\n    function DualRangeBar(container, config) {\n        var _this = this;\n        /** Constructed elements */\n        this.doms = {\n            /** Backgroud div */\n            background: document.createElement('div'),\n            /** Div of the starting slider */\n            startSlider: document.createElement('div'),\n            /** Div of the ending slider */\n            endSlider: document.createElement('div'),\n            /** Div of the range slider */\n            rangeSlider: document.createElement('div')\n        };\n        /** A unique prefix for everything in dual-range-bar */\n        this.prefix = 'drbar';\n        /** The slider that is under dragging */\n        this.underDragging = null;\n        /** Relative values are used for calculating layout,\n         * this should range from 0 to 1. */\n        this.relative = {\n            /** Corresponding value of the starting slider */\n            lower: 0,\n            /** Corresponding value of the ending slider */\n            upper: 1,\n            /** Minimum span of the range slider, in ratio to 1 */\n            minSpan: 0.2,\n            /** Maximum span of the range slider, in ratio to 1 */\n            maxSpan: 1,\n        };\n        //#region Absolute preperties\n        /** Minimum possible value of the ranges */\n        this.lowerBound = 0;\n        /** Maximum possible value of the ranges */\n        this.upperBound = 1;\n        //#region Initializing the container\n        if (typeof (container) === 'string')\n            this.container = document.getElementById(container);\n        else\n            this.container = container;\n        // Throw an error if failed\n        if (!this.container)\n            throw Error(container + \" is not a <div> element.\");\n        // Add an id to the container if the container does not have one\n        if (this.container.id === null)\n            this.container.id = this.getUniqueID();\n        (function (x) {\n            if (!_this.container.classList.contains(x)) {\n                _this.container.classList.add(x);\n            }\n        })(this.prefix + \"-container\");\n        //#endregion\n        //#region DOM element initializing\n        // Set class for the div elements\n        this.doms.background.classList.add(this.prefix + \"-bg\");\n        this.doms.startSlider.classList.add(this.prefix + \"-slider\", this.prefix + \"-start\");\n        this.doms.endSlider.classList.add(this.prefix + \"-slider\", this.prefix + \"-end\");\n        this.doms.rangeSlider.classList.add(this.prefix + \"-range\");\n        // Insert the DOMs\n        this.container.appendChild(this.doms.background);\n        this.doms.background.appendChild(this.doms.rangeSlider);\n        this.doms.background.appendChild(this.doms.startSlider);\n        this.doms.background.appendChild(this.doms.endSlider);\n        //#endregion\n        //#region Inline styles of the DOM elements\n        utils_1.setStyle(this.container, {\n            display: 'flex', overflow: 'visible',\n            alignItems: 'center', justifyContent: 'center'\n        });\n        var elementStyle = {\n            display: 'block', overflow: 'visible', position: 'absolute'\n        };\n        utils_1.setStyle(this.doms.background, elementStyle);\n        utils_1.setStyle(this.doms.startSlider, elementStyle);\n        utils_1.setStyle(this.doms.endSlider, elementStyle);\n        utils_1.setStyle(this.doms.rangeSlider, elementStyle);\n        //#endregion\n        //#region Handling configuration\n        if (config === null || config === void 0 ? void 0 : config.minimizes)\n            this.container.classList.add(this.prefix + \"-minimizes\");\n        // Size configuration\n        if (config === null || config === void 0 ? void 0 : config.size) {\n            this.container.classList.remove(this.prefix + \"-small\", this.prefix + \"-large\", this.prefix + \"-huge\");\n            if (config.size !== 'default')\n                this.container.classList.add(this.prefix + \"-\" + config.size);\n        }\n        // Values in the config\n        this.lowerBound = (config === null || config === void 0 ? void 0 : config.lowerBound) || this.lowerBound;\n        this.upperBound = (config === null || config === void 0 ? void 0 : config.upperBound) || this.upperBound;\n        this.minSpan = (config === null || config === void 0 ? void 0 : config.minSpan) || this.minSpan;\n        this.maxSpan = (config === null || config === void 0 ? void 0 : config.maxSpan) || this.maxSpan;\n        this.lower = (config === null || config === void 0 ? void 0 : config.lower) || this.lower;\n        this.upper = (config === null || config === void 0 ? void 0 : config.upper) || this.upper;\n        //#endregion\n        //#region Handling events\n        // Update bar when the container resizes\n        var resizeObserver = new resize_observer_polyfill_1.default(function () {\n            _this.update();\n        });\n        resizeObserver.observe(this.container);\n        // `underDragging` status update\n        this.doms.startSlider.addEventListener('mousedown', function () {\n            _this.underDragging = 'start';\n        });\n        this.doms.endSlider.addEventListener('mousedown', function () {\n            _this.underDragging = 'end';\n        });\n        this.doms.rangeSlider.addEventListener('mousedown', function () {\n            _this.underDragging = 'range';\n        });\n        window.addEventListener('mousemove', function (e) {\n            e.preventDefault();\n            switch (_this.underDragging) {\n                case null: return;\n                case 'start':\n                    _this.draggingStart(e);\n                    break;\n                case 'end':\n                    _this.draggingEnd(e);\n                    break;\n                case 'range':\n                    _this.draggingRange(e);\n                    break;\n            }\n            _this.update();\n            _this.emitEvent();\n        });\n        window.addEventListener('mouseup', function () {\n            if (_this.underDragging === null)\n                return;\n            _this.underDragging = null;\n            _this.update();\n            _this.emitEvent();\n        });\n        // Wheel behaviour\n        this.doms.rangeSlider.addEventListener('wheel', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            _this.wheelScaling(e);\n            _this.update();\n            _this.emitEvent();\n        });\n        this.doms.background.addEventListener('wheel', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            _this.wheelScrolling(e);\n            _this.update();\n            _this.emitEvent();\n        });\n        //#endregion\n    }\n    DualRangeBar.prototype.emitEvent = function () {\n        var event = new CustomEvent('update', {\n            detail: this\n        });\n        this.container.dispatchEvent(event);\n    };\n    /** An helper function for generating a unique ID */\n    DualRangeBar.prototype.getUniqueID = function () {\n        return this.prefix + \"-\" + Math.random().toString(36).substr(2, 9);\n    };\n    Object.defineProperty(DualRangeBar.prototype, \"boundSpan\", {\n        /** Difference of the upper bound and the lower bound */\n        get: function () { return this.upperBound - this.lowerBound; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"lower\", {\n        /** Absolute lower range */\n        get: function () { return this.relative.lower * this.boundSpan; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            this.relative.lower = newVal / this.boundSpan;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"upper\", {\n        /** Absolute upper range */\n        get: function () { return this.relative.upper * this.boundSpan; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            this.relative.upper = newVal / this.boundSpan;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"minSpan\", {\n        /** Absolute minimum range span */\n        get: function () { return this.relative.minSpan * this.boundSpan; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            var relativeSpan = Math.abs(newVal / this.boundSpan);\n            if (relativeSpan > 1)\n                throw Error('Invalid \"minSpan\" specification');\n            this.relative.minSpan = relativeSpan;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DualRangeBar.prototype, \"maxSpan\", {\n        /** Absolute maximum range span */\n        get: function () { return this.relative.maxSpan * this.boundSpan; },\n        set: function (newVal) {\n            if (this.boundSpan === 0)\n                throw Error('\"lowerBound\" should not equal to \"upperBound\"');\n            var relativeSpan = Math.abs(newVal / this.boundSpan);\n            if (relativeSpan > 1)\n                throw Error('Invalid \"maxSpan\" specification');\n            this.relative.maxSpan = relativeSpan;\n            this.update();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Implementing the EventTarget interface\n    DualRangeBar.prototype.addEventListener = function (type, listener, options) {\n        this.container.addEventListener(type, listener, options);\n    };\n    DualRangeBar.prototype.dispatchEvent = function (event) {\n        return this.container.dispatchEvent(event);\n    };\n    DualRangeBar.prototype.removeEventListener = function (type, callback, options) {\n        this.container.removeEventListener(type, callback, options);\n    };\n    return DualRangeBar;\n}());\nexports.default = DualRangeBar;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/DualRangeBar.ts?");

/***/ }),

/***/ "./src/DualVRangeBar.ts":
/*!******************************!*\
  !*** ./src/DualVRangeBar.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nvar DualRangeBar_1 = __webpack_require__(/*! ./DualRangeBar */ \"./src/DualRangeBar.ts\");\nvar DualVRangeBar = /** @class */ (function (_super) {\n    __extends(DualVRangeBar, _super);\n    function DualVRangeBar(container, config) {\n        var _this = _super.call(this, container, config) || this;\n        _this.container.classList.add(_this.prefix + \"-vertical\");\n        // Inline styles\n        _this.doms.background.style.height = '100%';\n        _this.update();\n        return _this;\n    }\n    DualVRangeBar.prototype.update = function () {\n        var barW = this.doms.background.clientWidth;\n        var barH = this.doms.background.clientHeight;\n        var startSliderW = this.doms.startSlider.clientWidth;\n        var startSliderH = this.doms.startSlider.clientHeight;\n        var endSliderW = this.doms.endSlider.clientWidth;\n        var endSliderH = this.doms.endSlider.clientHeight;\n        var rangeSliderW = this.doms.rangeSlider.clientWidth;\n        var rangeSliderH = (this.relative.upper - this.relative.lower) * barH;\n        var startSliderL = barW / 2 - startSliderW / 2;\n        var startSliderT = this.relative.lower * barH - startSliderH / 2;\n        var endSliderL = barW / 2 - endSliderW / 2;\n        var endSliderT = this.relative.upper * barH - endSliderH / 2;\n        var rangeSliderL = barW / 2 - rangeSliderW / 2;\n        var rangeSliderT = this.relative.lower * barH;\n        this.doms.startSlider.style.left = startSliderL + \"px\";\n        this.doms.startSlider.style.top = startSliderT + \"px\";\n        this.doms.endSlider.style.left = endSliderL + \"px\";\n        this.doms.endSlider.style.top = endSliderT + \"px\";\n        this.doms.rangeSlider.style.left = rangeSliderL + \"px\";\n        this.doms.rangeSlider.style.top = rangeSliderT + \"px\";\n        this.doms.rangeSlider.style.height = rangeSliderH + \"px\";\n    };\n    /** Helper function for getting dx via clientX */\n    DualVRangeBar.prototype.getDy = function (clientY) {\n        var bgRect = this.doms.background.getBoundingClientRect();\n        return clientY - bgRect.top;\n    };\n    DualVRangeBar.prototype.draggingStart = function (event) {\n        var minLower = 0, maxLower = 1 - this.relative.minSpan;\n        var newLower = this.getDy(event.clientY) / this.doms.background.clientHeight;\n        if (newLower < minLower)\n            newLower = minLower;\n        if (newLower > maxLower)\n            newLower = maxLower;\n        this.relative.lower = newLower;\n        if (newLower + this.relative.minSpan > this.relative.upper)\n            this.relative.upper = newLower + this.relative.minSpan;\n        if (newLower + this.relative.maxSpan < this.relative.upper)\n            this.relative.upper = newLower + this.relative.maxSpan;\n    };\n    DualVRangeBar.prototype.draggingEnd = function (event) {\n        var minUpper = this.relative.minSpan, maxUpper = 1;\n        var newUpper = this.getDy(event.clientY) / this.doms.background.clientHeight;\n        if (newUpper < minUpper)\n            newUpper = minUpper;\n        if (newUpper > maxUpper)\n            newUpper = maxUpper;\n        this.relative.upper = newUpper;\n        if (newUpper - this.relative.minSpan < this.relative.lower)\n            this.relative.lower = newUpper - this.relative.minSpan;\n        if (newUpper - this.relative.maxSpan > this.relative.lower)\n            this.relative.lower = newUpper - this.relative.maxSpan;\n    };\n    DualVRangeBar.prototype.draggingRange = function (event) {\n        var maxDx = 1 - this.relative.upper, minDx = -this.relative.lower;\n        var dx = event.movementY / this.doms.background.clientHeight;\n        if (dx > maxDx)\n            dx = maxDx;\n        if (dx < minDx)\n            dx = minDx;\n        this.relative.lower += dx;\n        this.relative.upper += dx;\n    };\n    DualVRangeBar.prototype.wheelScaling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientHeight;\n        var cursorPos = this.getDy(event.clientY) / this.doms.background.clientHeight;\n        var relativeSpan = this.relative.upper - this.relative.lower;\n        var newLower = this.relative.lower -\n            dy * (cursorPos - this.relative.lower) / relativeSpan;\n        var newUpper = this.relative.upper +\n            dy * (this.relative.upper - cursorPos) / relativeSpan;\n        if (newLower < 0)\n            newLower = 0;\n        if (newUpper > 1)\n            newUpper = 1;\n        if (newUpper - newLower < this.relative.minSpan) {\n            newLower = cursorPos -\n                this.relative.minSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.minSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        if (newUpper - newLower > this.relative.maxSpan) {\n            newLower = cursorPos -\n                this.relative.maxSpan * (cursorPos - this.relative.lower) / relativeSpan;\n            newUpper = cursorPos +\n                this.relative.maxSpan * (this.relative.upper - cursorPos) / relativeSpan;\n        }\n        this.relative.lower = newLower;\n        this.relative.upper = newUpper;\n    };\n    DualVRangeBar.prototype.wheelScrolling = function (event) {\n        var dy = utils_1.getDeltaY(event) / this.doms.background.clientHeight;\n        var minDy = -this.relative.lower;\n        var maxDy = 1 - this.relative.upper;\n        if (dy < minDy)\n            dy = minDy;\n        if (dy > maxDy)\n            dy = maxDy;\n        this.relative.lower += dy;\n        this.relative.upper += dy;\n    };\n    return DualVRangeBar;\n}(DualRangeBar_1.default));\nexports.default = DualVRangeBar;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/DualVRangeBar.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DualVRangeBar = exports.DualHRangeBar = void 0;\nvar DualHRangeBar_1 = __webpack_require__(/*! ./DualHRangeBar */ \"./src/DualHRangeBar.ts\");\nexports.DualHRangeBar = DualHRangeBar_1.default;\nvar DualVRangeBar_1 = __webpack_require__(/*! ./DualVRangeBar */ \"./src/DualVRangeBar.ts\");\nexports.DualVRangeBar = DualVRangeBar_1.default;\nwindow.addEventListener('load', function () {\n    var dualRangeBars = document.getElementsByClassName('drbar-container');\n    for (var i = 0; i < dualRangeBars.length; i++) {\n        var bar = dualRangeBars.item(i);\n        if ((bar === null || bar === void 0 ? void 0 : bar.nodeName) !== 'DIV')\n            continue;\n        if ((bar === null || bar === void 0 ? void 0 : bar.childElementCount) > 0)\n            continue;\n        if (bar === null || bar === void 0 ? void 0 : bar.classList.contains('drbar-vertical')) {\n            new DualVRangeBar_1.default(bar);\n        }\n        else {\n            new DualHRangeBar_1.default(bar);\n        }\n    }\n});\nwindow.DualHRange = DualHRangeBar_1.default;\nwindow.DualVRange = DualVRangeBar_1.default;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/index.ts?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader!./style.css */ \"./node_modules/css-loader/index.js!./src/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://dual-range-bar/./src/style.css?");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDeltaY = exports.setStyle = void 0;\n/** Fask set styles for a HTML element, tricky AnyScript */\nfunction setStyle(htmlElement, styleSpec) {\n    Object.assign(htmlElement.style, styleSpec);\n}\nexports.setStyle = setStyle;\n/** Return a calculated value of deltaY from a WheelEvent,\n * since Firefox would return `deltaMode === 0x02` or `deltaMode === 0x03` */\nfunction getDeltaY(event) {\n    var r = event.deltaMode === 0x01 ? 16 : 1;\n    return event.deltaY * r;\n}\nexports.getDeltaY = getDeltaY;\n\n\n//# sourceURL=webpack://dual-range-bar/./src/utils.ts?");

/***/ })

/******/ });
});